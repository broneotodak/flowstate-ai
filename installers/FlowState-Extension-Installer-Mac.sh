#!/bin/bash

echo "==================================="
echo "FlowState Browser Extension Installer"
echo "==================================="
echo

# Set extension directory
EXTENSION_DIR="$HOME/Library/Application Support/FlowState/browser-extension"

# Create directory
echo "Creating extension directory..."
mkdir -p "$EXTENSION_DIR"

# Extract extension files (embedded in script)
echo "Extracting extension files..."
extract_files() {
    echo "Creating manifest.json..."
    cat << 'EOF' | base64 -d > "$EXTENSION_DIR/manifest.json"
ewogICJtYW5pZmVzdF92ZXJzaW9uIjogMywKICAibmFtZSI6ICJGbG93U3RhdGUgQ29udGV4dCBUcmFja2VyIiwKICAidmVyc2lvbiI6ICIxLjAuMSIsCiAgImRlc2NyaXB0aW9uIjogIkF1dG9tYXRpY2FsbHkgdHJhY2tzIHlvdXIgY3VycmVudCBwcm9qZWN0IGNvbnRleHQgYmFzZWQgb24gYnJvd3NlciBhY3Rpdml0eSIsCiAgInBlcm1pc3Npb25zIjogWwogICAgInRhYnMiLAogICAgInN0b3JhZ2UiLAogICAgImFsYXJtcyIKICBdLAogICJob3N0X3Blcm1pc3Npb25zIjogWwogICAgImh0dHBzOi8vZ2l0aHViLmNvbS8qIiwKICAgICJodHRwczovL2NsYXVkZS5haS8qIiwKICAgICJodHRwOi8vbG9jYWxob3N0LyoiLAogICAgImh0dHBzOi8vKi5zdXBhYmFzZS5jby8qIgogIF0sCiAgImJhY2tncm91bmQiOiB7CiAgICAic2VydmljZV93b3JrZXIiOiAiYmFja2dyb3VuZC5qcyIKICB9LAogICJhY3Rpb24iOiB7CiAgICAiZGVmYXVsdF9wb3B1cCI6ICJwb3B1cC5odG1sIiwKICAgICJkZWZhdWx0X2ljb24iOiB7CiAgICAgICIxNiI6ICJpY29uMTYucG5nIiwKICAgICAgIjQ4IjogImljb240OC5wbmciLAogICAgICAiMTI4IjogImljb24xMjgucG5nIgogICAgfQogIH0sCiAgImljb25zIjogewogICAgIjE2IjogImljb24xNi5wbmciLAogICAgIjQ4IjogImljb240OC5wbmciLAogICAgIjEyOCI6ICJpY29uMTI4LnBuZyIKICB9Cn0=
EOF

    echo "Creating background.js..."
    cat << 'EOF' | base64 -d > "$EXTENSION_DIR/background.js"

EOF

    echo "Creating popup.html..."
    cat << 'EOF' | base64 -d > "$EXTENSION_DIR/popup.html"
PCFET0NUWVBFIGh0bWw+CjxodG1sPgo8aGVhZD4KICAgIDxzdHlsZT4KICAgICAgICBib2R5IHsKICAgICAgICAgICAgd2lkdGg6IDMwMHB4OwogICAgICAgICAgICBwYWRkaW5nOiAxNXB4OwogICAgICAgICAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBzYW5zLXNlcmlmOwogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgfQogICAgICAgIGgyIHsKICAgICAgICAgICAgbWFyZ2luOiAwIDAgMTVweCAwOwogICAgICAgICAgICBjb2xvcjogIzIxOTZGMzsKICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4OwogICAgICAgIH0KICAgICAgICAuc3RhdHVzIHsKICAgICAgICAgICAgcGFkZGluZzogMTVweDsKICAgICAgICAgICAgYmFja2dyb3VuZDogI2Y1ZjVmNTsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4OwogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4OwogICAgICAgIH0KICAgICAgICAuc3RhdHVzLmFjdGl2ZSB7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNlM2YyZmQ7CiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMyMTk2RjM7CiAgICAgICAgfQogICAgICAgIC5wcm9qZWN0LW5hbWUgewogICAgICAgICAgICBmb250LXNpemU6IDE2cHg7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgICAgICAgfQogICAgICAgIC50YXNrIHsKICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICAgICAgICBjb2xvcjogIzY2NjsKICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4OwogICAgICAgIH0KICAgICAgICAuY29uZmlkZW5jZSB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsKICAgICAgICAgICAgY29sb3I6ICM5OTk7CiAgICAgICAgfQogICAgICAgIC5jb25maWRlbmNlLWJhciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBoZWlnaHQ6IDRweDsKICAgICAgICAgICAgYmFja2dyb3VuZDogI2RkZDsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7CiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICAgICAgfQogICAgICAgIC5jb25maWRlbmNlLWZpbGwgewogICAgICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICMyMTk2RjM7CiAgICAgICAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3M7CiAgICAgICAgfQogICAgICAgIGJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBwYWRkaW5nOiAxMHB4OwogICAgICAgICAgICBib3JkZXI6IG5vbmU7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDsKICAgICAgICAgICAgYmFja2dyb3VuZDogIzIxOTZGMzsKICAgICAgICAgICAgY29sb3I6IHdoaXRlOwogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgICAgICAgfQogICAgICAgIGJ1dHRvbjpob3ZlciB7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICMxOTc2RDI7CiAgICAgICAgfQogICAgICAgIGJ1dHRvbjpkaXNhYmxlZCB7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNjY2M7CiAgICAgICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7CiAgICAgICAgfQogICAgICAgIC5zZXR0aW5ncyB7CiAgICAgICAgICAgIG1hcmdpbi10b3A6IDE1cHg7CiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxNXB4OwogICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2RkZDsKICAgICAgICB9CiAgICAgICAgaW5wdXQgewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgcGFkZGluZzogOHB4OwogICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICAgICAgfQogICAgICAgIC50b2dnbGUgewogICAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgICAgICAgfQogICAgICAgIC5zd2l0Y2ggewogICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgICAgIHdpZHRoOiA0MHB4OwogICAgICAgICAgICBoZWlnaHQ6IDIwcHg7CiAgICAgICAgfQogICAgICAgIC5zd2l0Y2ggaW5wdXQgewogICAgICAgICAgICBvcGFjaXR5OiAwOwogICAgICAgICAgICB3aWR0aDogMDsKICAgICAgICAgICAgaGVpZ2h0OiAwOwogICAgICAgIH0KICAgICAgICAuc2xpZGVyIHsKICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgICAgIHRvcDogMDsKICAgICAgICAgICAgbGVmdDogMDsKICAgICAgICAgICAgcmlnaHQ6IDA7CiAgICAgICAgICAgIGJvdHRvbTogMDsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYzsKICAgICAgICAgICAgdHJhbnNpdGlvbjogLjRzOwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4OwogICAgICAgIH0KICAgICAgICAuc2xpZGVyOmJlZm9yZSB7CiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgICAgY29udGVudDogIiI7CiAgICAgICAgICAgIGhlaWdodDogMTRweDsKICAgICAgICAgICAgd2lkdGg6IDE0cHg7CiAgICAgICAgICAgIGxlZnQ6IDNweDsKICAgICAgICAgICAgYm90dG9tOiAzcHg7CiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogICAgICAgICAgICB0cmFuc2l0aW9uOiAuNHM7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKICAgICAgICB9CiAgICAgICAgaW5wdXQ6Y2hlY2tlZCArIC5zbGlkZXIgewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NkYzOwogICAgICAgIH0KICAgICAgICBpbnB1dDpjaGVja2VkICsgLnNsaWRlcjpiZWZvcmUgewogICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7CiAgICAgICAgfQogICAgICAgIC5uby1jb250ZXh0IHsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICBjb2xvcjogIzk5OTsKICAgICAgICAgICAgcGFkZGluZzogMjBweDsKICAgICAgICB9CiAgICA8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PgogICAgPGgyPvCfjIogRmxvd1N0YXRlIFRyYWNrZXI8L2gyPgogICAgCiAgICA8ZGl2IGlkPSJjb250ZXh0RGlzcGxheSIgY2xhc3M9InN0YXR1cyI+CiAgICAgICAgPGRpdiBjbGFzcz0ibm8tY29udGV4dCI+RGV0ZWN0aW5nIGNvbnRleHQuLi48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8YnV0dG9uIGlkPSJyZWZyZXNoQnRuIj5SZWZyZXNoIENvbnRleHQ8L2J1dHRvbj4KICAgIDxidXR0b24gaWQ9ImxvZ0J0biI+TG9nIEFjdGl2aXR5IE5vdzwvYnV0dG9uPgogICAgCiAgICA8ZGl2IGNsYXNzPSJzZXR0aW5ncyI+CiAgICAgICAgPGRpdiBjbGFzcz0idG9nZ2xlIj4KICAgICAgICAgICAgPHNwYW4+RW5hYmxlIFRyYWNraW5nPC9zcGFuPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9InN3aXRjaCI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJlbmFibGVUb2dnbGUiIGNoZWNrZWQ+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2xpZGVyIj48L3NwYW4+CiAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBpZD0ic2VydmljZUtleSIgcGxhY2Vob2xkZXI9IlN1cGFiYXNlIFNlcnZpY2UgS2V5Ij4KICAgICAgICA8YnV0dG9uIGlkPSJzYXZlQnRuIj5TYXZlIFNldHRpbmdzPC9idXR0b24+CiAgICA8L2Rpdj4KICAgIAogICAgPHNjcmlwdCBzcmM9InBvcHVwLmpzIj48L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+
EOF

    echo "Creating popup.js..."
    cat << 'EOF' | base64 -d > "$EXTENSION_DIR/popup.js"
Ly8gRmxvd1N0YXRlIEJyb3dzZXIgRXh0ZW5zaW9uIC0gUG9wdXAgU2NyaXB0Cgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgYXN5bmMgKCkgPT4gewogICAgLy8gTG9hZCBzYXZlZCBzZXR0aW5ncwogICAgY29uc3Qgc2V0dGluZ3MgPSBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQoWydzZXJ2aWNlS2V5JywgJ2VuYWJsZWQnXSk7CiAgICAKICAgIGlmIChzZXR0aW5ncy5zZXJ2aWNlS2V5KSB7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlcnZpY2VLZXknKS52YWx1ZSA9IHNldHRpbmdzLnNlcnZpY2VLZXk7CiAgICB9CiAgICAKICAgIGlmIChzZXR0aW5ncy5lbmFibGVkICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZW5hYmxlVG9nZ2xlJykuY2hlY2tlZCA9IHNldHRpbmdzLmVuYWJsZWQ7CiAgICB9CiAgICAKICAgIC8vIEdldCBjdXJyZW50IGNvbnRleHQKICAgIHVwZGF0ZUNvbnRleHREaXNwbGF5KCk7CiAgICAKICAgIC8vIEJ1dHRvbiBoYW5kbGVycwogICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlZnJlc2hCdG4nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jICgpID0+IHsKICAgICAgICBjb25zdCBidG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVmcmVzaEJ0bicpOwogICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7CiAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ1JlZnJlc2hpbmcuLi4nOwogICAgICAgIAogICAgICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHsgYWN0aW9uOiAnZm9yY2VDaGVjaycgfSwgKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgIHVwZGF0ZUNvbnRleHREaXNwbGF5KCk7CiAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOwogICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAnUmVmcmVzaCBDb250ZXh0JzsKICAgICAgICB9KTsKICAgIH0pOwogICAgCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9nQnRuJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoKSA9PiB7CiAgICAgICAgY29uc3QgYnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvZ0J0bicpOwogICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7CiAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ0xvZ2dpbmcuLi4nOwogICAgICAgIAogICAgICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHsgYWN0aW9uOiAnbG9nQWN0aXZpdHknIH0sIChyZXNwb25zZSkgPT4gewogICAgICAgICAgICBidG4uZGlzYWJsZWQgPSBmYWxzZTsKICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ0xvZyBBY3Rpdml0eSBOb3cnOwogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgIHNob3dTdGF0dXMoJ0FjdGl2aXR5IGxvZ2dlZCEnKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSk7CiAgICAKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzYXZlQnRuJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoKSA9PiB7CiAgICAgICAgY29uc3Qgc2VydmljZUtleSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZXJ2aWNlS2V5JykudmFsdWU7CiAgICAgICAgY29uc3QgZW5hYmxlZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlbmFibGVUb2dnbGUnKS5jaGVja2VkOwogICAgICAgIAogICAgICAgIGF3YWl0IGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7IHNlcnZpY2VLZXksIGVuYWJsZWQgfSk7CiAgICAgICAgc2hvd1N0YXR1cygnU2V0dGluZ3Mgc2F2ZWQhJyk7CiAgICB9KTsKICAgIAogICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VuYWJsZVRvZ2dsZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGFzeW5jIChlKSA9PiB7CiAgICAgICAgYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KHsgZW5hYmxlZDogZS50YXJnZXQuY2hlY2tlZCB9KTsKICAgIH0pOwp9KTsKCmZ1bmN0aW9uIHVwZGF0ZUNvbnRleHREaXNwbGF5KCkgewogICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2UoeyBhY3Rpb246ICdnZXRDb250ZXh0JyB9LCAoY29udGV4dCkgPT4gewogICAgICAgIGNvbnN0IGRpc3BsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGV4dERpc3BsYXknKTsKICAgICAgICAKICAgICAgICBpZiAoIWNvbnRleHQgfHwgIWNvbnRleHQucHJvamVjdCkgewogICAgICAgICAgICBkaXNwbGF5LmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPSJuby1jb250ZXh0Ij5ObyBhY3RpdmUgcHJvamVjdCBkZXRlY3RlZDwvZGl2Pic7CiAgICAgICAgICAgIGRpc3BsYXkuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZGlzcGxheS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTsKICAgICAgICBkaXNwbGF5LmlubmVySFRNTCA9IGAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvamVjdC1uYW1lIj4ke2NvbnRleHQucHJvamVjdH08L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFzayI+JHtjb250ZXh0LnRhc2sgfHwgJ0dlbmVyYWwgd29yayd9PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbmZpZGVuY2UiPgogICAgICAgICAgICAgICAgQ29uZmlkZW5jZTogJHtNYXRoLnJvdW5kKGNvbnRleHQuY29uZmlkZW5jZSAqIDEwMCl9JQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29uZmlkZW5jZS1iYXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29uZmlkZW5jZS1maWxsIiBzdHlsZT0id2lkdGg6ICR7Y29udGV4dC5jb25maWRlbmNlICogMTAwfSUiPjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICBgOwogICAgfSk7Cn0KCmZ1bmN0aW9uIHNob3dTdGF0dXMobWVzc2FnZSkgewogICAgY29uc3QgYnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NhdmVCdG4nKTsKICAgIGNvbnN0IG9yaWdpbmFsVGV4dCA9IGJ0bi50ZXh0Q29udGVudDsKICAgIGJ0bi50ZXh0Q29udGVudCA9IG1lc3NhZ2U7CiAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICBidG4udGV4dENvbnRlbnQgPSBvcmlnaW5hbFRleHQ7CiAgICB9LCAyMDAwKTsKfQ==
EOF

    echo "Creating icon16.png..."
    cat << 'EOF' | base64 -d > "$EXTENSION_DIR/icon16.png"
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAA7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAABPSURBVDiN7Y4xCgAwCAN3/v+zHRxELYKD0DkItyQEQETkRkb1AaBqAS5nZ/cFmJkPgKoWYGcPzOwTwN0LsLNb/w7M7AWoun0Cd/8EZvaSDR4hKQ9nQ4ujAAAAAElFTkSuQmCC
EOF

    echo "Creating icon48.png..."
    cat << 'EOF' | base64 -d > "$EXTENSION_DIR/icon48.png"
iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAA7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAABwSURBVGiB7dihDcAwDETRl2XJMmQZsgyZJcswTJcFSiGDolCQ/S+5Vc4nOTkiIs6mqiZ2Zna8SxERd5IkSZKkf1TV5HneAfQk7T1PE5GZ2YGYGRFBP6mqiTnndQBXkvae0TSYmR2I3gfozOwXJEl64gGhiyUhjV/PCQAAAABJRU5ErkJggg==
EOF

    echo "Creating icon128.png..."
    cat << 'EOF' | base64 -d > "$EXTENSION_DIR/icon128.png"
iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAA7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAACXSURBVHic7duxDYAwDETRh2UsQxYiy5BlmC4LQAEUKATZeq9y5fycZEeSpL+oqsnd3V1EvCfOzKoGZmZHZGZExPshqmqCu7u7iIj3xJlZ1cDM7IjMjKn5PoADMjM6MDPb+wCOSLsPoKqmmJlddwAzs6qBu7u7iIj3xJlZ1cDM7IjMjIh4T5yaVQ3MzI7I9wFI0vAeEUUzCJdnGBsAAAAASUVORK5CYII=
EOF

    echo "Files extracted successfully"
}


extract_files

# Instructions
echo
echo "==================================="
echo "INSTALLATION INSTRUCTIONS:"
echo "==================================="
echo "1. Opening Chrome to extensions page..."
echo "2. Enable 'Developer mode' (toggle in top right)"
echo "3. Click 'Load unpacked'"
echo "4. Navigate to: $EXTENSION_DIR"
echo "5. Click 'Select'"
echo
echo "After installation:"
echo "- Click the FlowState icon in toolbar"
echo "- Enter your service key"
echo "- Enable tracking"
echo "==================================="
echo

# Open Chrome extensions page
open -a "Google Chrome" "chrome://extensions/" 2>/dev/null || \
open -a "Google Chrome" --args --new-window "chrome://extensions/" 2>/dev/null

# Also try other browsers
open -a "Microsoft Edge" "edge://extensions/" 2>/dev/null &
open -a "Brave Browser" "brave://extensions/" 2>/dev/null &

echo "Extension files installed to: $EXTENSION_DIR"
echo "Press Enter to exit..."
read